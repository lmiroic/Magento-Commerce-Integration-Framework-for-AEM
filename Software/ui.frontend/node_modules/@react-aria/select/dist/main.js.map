{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,sBAAT,CAAgCC,CAAhC,EAAmC;AACjC,SAAOA,CAAC,IAAIA,CAAC,CAACC,UAAP,GAAoBD,CAAC,CAACE,OAAtB,GAAgCF,CAAvC;AACD;;ACmDD;;;;;;AAMO,SAASG,SAAT,CAAsBC,KAAtB,EAAmDC,KAAnD,EAA0EC,GAA1E,EAAmH;AACxH,MAAI;AACFC,IAAAA,gBADE;AAEFC,IAAAA;AAFE,MAGAJ,KAHJ,CADwH,CAMxH;AACA;;AACA,MAAIK,QAAQ,GAAGC,WAAW,CAAC;AAACC,IAAAA,KAAK,EAAE,QAAR;AAAkBC,IAAAA,WAAW,EAAE;AAA/B,GAAD,CAA1B;AACA,MAAIC,QAAQ,GAAGC,OAAO,CAAC,MAAMP,gBAAgB,IAAI,IAAIQ,oBAAJ,CAAyBV,KAAK,CAACW,UAA/B,EAA2CX,KAAK,CAACY,YAAjD,EAA+D,IAA/D,EAAqER,QAArE,CAA3B,EAA2G,CAACF,gBAAD,EAAmBF,KAAK,CAACW,UAAzB,EAAqCX,KAAK,CAACY,YAA3C,EAAyDR,QAAzD,CAA3G,CAAtB;AAEA,MAAI;AAACS,IAAAA,gBAAD;AAAmBC,IAAAA;AAAnB,MAAgCC,cAAc,CAChD;AACEZ,IAAAA,UADF;AAEEa,IAAAA,IAAI,EAAE;AAFR,GADgD,EAKhDhB,KALgD,EAMhDC,GANgD,CAAlD;;AASA,MAAIgB,SAAS,GAAIC,CAAD,IAAsB;AACpC,YAAQA,CAAC,CAACC,GAAV;AACE,WAAK,WAAL;AAAkB;AAChB;AACAD,UAAAA,CAAC,CAACE,cAAF;AAEA,cAAID,GAAG,GAAGnB,KAAK,CAACqB,WAAN,IAAqB,IAArB,GAA4Bb,QAAQ,CAACc,WAAT,CAAqBtB,KAAK,CAACqB,WAA3B,CAA5B,GAAsEb,QAAQ,CAACe,WAAT,EAAhF;;AACA,cAAIJ,GAAJ,EAAS;AACPnB,YAAAA,KAAK,CAACwB,cAAN,CAAqBL,GAArB;AACD;;AACD;AACD;;AACD,WAAK,YAAL;AAAmB;AACjB;AACAD,UAAAA,CAAC,CAACE,cAAF;AAEA,cAAID,GAAG,GAAGnB,KAAK,CAACqB,WAAN,IAAqB,IAArB,GAA4Bb,QAAQ,CAACiB,WAAT,CAAqBzB,KAAK,CAACqB,WAA3B,CAA5B,GAAsEb,QAAQ,CAACe,WAAT,EAAhF;;AACA,cAAIJ,GAAJ,EAAS;AACPnB,YAAAA,KAAK,CAACwB,cAAN,CAAqBL,GAArB;AACD;;AACD;AACD;AApBH;AAsBD,GAvBD;;AAyBA,MAAI;AAACO,IAAAA;AAAD,MAAoBC,aAAa,CAAC;AACpCzB,IAAAA,gBAAgB,EAAEM,QADkB;AAEpCoB,IAAAA,gBAAgB,EAAE5B,KAAK,CAAC4B,gBAFY;;AAGpCC,IAAAA,YAAY,CAACV,GAAD,EAAM;AAChBnB,MAAAA,KAAK,CAACwB,cAAN,CAAqBL,GAArB;AACD;;AALmC,GAAD,CAArC;AAQA,MAAI;AAACW,IAAAA,UAAD;AAAaC,IAAAA,UAAb;AAAyBC,IAAAA,gBAAzB;AAA2CC,IAAAA;AAA3C,MAAgEC,QAAQ,iCACvEnC,KADuE;AAE1EoC,IAAAA,gBAAgB,EAAE;AAFwD,KAA5E;AAKAT,EAAAA,eAAe,CAACT,SAAhB,GAA4BS,eAAe,CAACU,gBAA5C;AACA,SAAOV,eAAe,CAACU,gBAAvB;AAEA,MAAIC,QAAQ,GAAGC,cAAc,CAACvC,KAAD,EAAQ;AAACwC,IAAAA,SAAS,EAAE;AAAZ,GAAR,CAA7B;AACA,MAAIC,YAAY,GAAGC,UAAU,CAACf,eAAD,EAAkBb,gBAAlB,EAAoCkB,UAApC,CAA7B;AAEA,MAAIW,OAAO,GAAGC,KAAK,EAAnB;AAEA,SAAO;AACLb,IAAAA,UAAU,kCACLA,UADK;AAERc,MAAAA,OAAO,EAAE,MAAM;AACb,YAAI,CAAC7C,KAAK,CAACI,UAAX,EAAuB;AACrBF,UAAAA,GAAG,CAAC4C,OAAJ,CAAYC,KAAZ,GADqB,CAGrB;;AACAC,UAAAA,sBAAsB,CAAC,UAAD,CAAtB;AACD;AACF;AATO,MADL;AAYLP,IAAAA,YAAY,EAAEC,UAAU,CAACJ,QAAD,kCACnBG,YADmB;AAEtBvB,MAAAA,SAAS,EAAE+B,KAAK,CAACR,YAAY,CAACvB,SAAd,EAAyBA,SAAzB,EAAoClB,KAAK,CAACkB,SAA1C,CAFM;AAGtBgC,MAAAA,OAAO,EAAElD,KAAK,CAACkD,OAHO;AAItB,yBAAmB,CACjBT,YAAY,CAAC,iBAAD,CADK,EAEjBA,YAAY,CAAC,YAAD,CAAZ,IAA8B,CAACA,YAAY,CAAC,iBAAD,CAA3C,GAAiEA,YAAY,CAACU,EAA9E,GAAmF,IAFlE,EAGjBR,OAHiB,EAIjBS,MAJiB,CAIVC,OAJU,EAIDC,IAJC,CAII,GAJJ,CAJG;;AAStBC,MAAAA,OAAO,CAACpC,CAAD,EAAgB;AACrB,YAAIlB,KAAK,CAACuD,SAAV,EAAqB;AACnB;AACD;;AAED,YAAIxD,KAAK,CAACuD,OAAV,EAAmB;AACjBvD,UAAAA,KAAK,CAACuD,OAAN,CAAcpC,CAAd;AACD;;AAEDlB,QAAAA,KAAK,CAACwD,UAAN,CAAiB,IAAjB;AACD,OAnBqB;;AAoBtBC,MAAAA,MAAM,CAACvC,CAAD,EAAgB;AACpB,YAAIlB,KAAK,CAAC0D,MAAV,EAAkB;AAChB;AACD;;AAED,YAAI3D,KAAK,CAAC0D,MAAV,EAAkB;AAChB1D,UAAAA,KAAK,CAAC0D,MAAN,CAAavC,CAAb;AACD;;AAEDlB,QAAAA,KAAK,CAACwD,UAAN,CAAiB,KAAjB;AACD;;AA9BqB,OAZnB;AA4CLG,IAAAA,UAAU,EAAE;AACVT,MAAAA,EAAE,EAAER;AADM,KA5CP;AA+CL5B,IAAAA,SAAS,kCACJA,SADI;AAEP8C,MAAAA,SAAS,EAAE5D,KAAK,CAAC6D,aAAN,IAAuB,IAF3B;AAGPC,MAAAA,qBAAqB,EAAE,IAHhB;AAIPC,MAAAA,kBAAkB,EAAE,IAJb;AAKPC,MAAAA,sBAAsB,EAAE,IALjB;AAMPP,MAAAA,MAAM,EAAGvC,CAAD,IAAO;AACb,YAAIA,CAAC,CAAC+C,aAAF,CAAgBC,QAAhB,CAAyBhD,CAAC,CAACiD,aAA3B,CAAJ,EAAuD;AACrD;AACD;;AAED,YAAIpE,KAAK,CAAC0D,MAAV,EAAkB;AAChB1D,UAAAA,KAAK,CAAC0D,MAAN,CAAavC,CAAb;AACD;;AACDlB,QAAAA,KAAK,CAACwD,UAAN,CAAiB,KAAjB;AACD,OAfM;AAgBP,yBAAmB,CACjBzB,UAAU,CAAC,iBAAD,CADO,EAEjBS,YAAY,CAAC,YAAD,CAAZ,IAA8B,CAACT,UAAU,CAAC,iBAAD,CAAzC,GAA+DS,YAAY,CAACU,EAA5E,GAAiF,IAFhE,EAGjBC,MAHiB,CAGVC,OAHU,EAGDC,IAHC,CAGI,GAHJ;AAhBZ,MA/CJ;AAoELrB,IAAAA,gBApEK;AAqELC,IAAAA;AArEK,GAAP;AAuED;;;;AChKD;;;;;AAKO,SAASmC,eAAT,CAA4BrE,KAA5B,EAA0DC,KAA1D,EAAiFqE,UAAjF,EAAqH;AAAA;;AAC1H,MAAI;AAACC,IAAAA,IAAD;AAAOnE,IAAAA;AAAP,MAAqBJ,KAAzB;AACA,MAAIwE,QAAQ,GAAGC,sBAAsB,EAArC;AACA,MAAI;AAACC,IAAAA;AAAD,MAAwBC,iBAAiB,EAA7C,CAH0H,CAK1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAO;AACLC,IAAAA,cAAc,kCACTF,mBADS;AAEZ,qBAAe;AAFH,MADT;AAKLG,IAAAA,UAAU,EAAE;AACV5D,MAAAA,IAAI,EAAE,MADI;AAEV6D,MAAAA,QAAQ,EAAEN,QAAQ,IAAI,IAAZ,IAAoBvE,KAAK,CAACuD,SAA1B,IAAuCvD,KAAK,CAAC0D,MAA7C,GAAsD,CAAC,CAAvD,GAA2D,CAF3D;AAGVoB,MAAAA,KAAK,EAAE;AAACC,QAAAA,QAAQ,EAAE;AAAX,OAHG;AAIVzB,MAAAA,OAAO,EAAE,MAAMe,UAAU,CAACxB,OAAX,CAAmBC,KAAnB,EAJL;AAKVkC,MAAAA,QAAQ,EAAE7E;AALA,KALP;AAYL8E,IAAAA,WAAW,EAAE;AACXJ,MAAAA,QAAQ,EAAE,CAAC,CADA;AAEXG,MAAAA,QAAQ,EAAE7E,UAFC;AAGXmE,MAAAA,IAHW;AAIXY,MAAAA,IAAI,EAAElF,KAAK,CAACW,UAAN,CAAiBuE,IAJZ;AAKXC,MAAAA,KAAK,wBAAEnF,KAAK,CAACqB,WAAR,iCAAuB,EALjB;AAMX+D,MAAAA,QAAQ,EAAGlE,CAAD,IAA6ClB,KAAK,CAACwB,cAAN,CAAqBN,CAAC,CAACmE,MAAF,CAASF,KAA9B;AAN5C;AAZR,GAAP;AAqBD;AAED;;;;;;;;AAIO,SAASG,YAAT,CAAyBvF,KAAzB,EAAsD;AAC3D,MAAI;AAACC,IAAAA,KAAD;AAAQqE,IAAAA,UAAR;AAAoBkB,IAAAA,KAApB;AAA2BjB,IAAAA,IAA3B;AAAiCnE,IAAAA;AAAjC,MAA+CJ,KAAnD;AACA,MAAI;AAAC4E,IAAAA,cAAD;AAAiBC,IAAAA,UAAjB;AAA6BK,IAAAA;AAA7B,MAA4Cb,eAAe,CAACrE,KAAD,EAAQC,KAAR,EAAeqE,UAAf,CAA/D,CAF2D,CAI3D;AACA;AACA;;AACA,MAAIrE,KAAK,CAACW,UAAN,CAAiBuE,IAAjB,IAAyB,GAA7B,EAAkC;AAChC,wBACE,4BAASP,cAAT,eACE,8BAAWC,UAAX,CADF,eAEE,oCACGW,KADH,eAEE,+BAAYN,WAAZ,eACE,oCADF,EAEG,CAAC,GAAGjF,KAAK,CAACW,UAAN,CAAiB6E,OAAjB,EAAJ,EAAgCC,GAAhC,CAAoCtE,GAAG,IAAI;AAC1C,UAAIuE,IAAI,GAAG1F,KAAK,CAACW,UAAN,CAAiBgF,OAAjB,CAAyBxE,GAAzB,CAAX;;AACA,UAAIuE,IAAI,CAAC1E,IAAL,KAAc,MAAlB,EAA0B;AACxB,4BACE;AACE,UAAA,GAAG,EAAE0E,IAAI,CAACvE,GADZ;AAEE,UAAA,KAAK,EAAEuE,IAAI,CAACvE;AAFd,WAGGuE,IAAI,CAACE,SAHR,CADF;AAOD;AACF,KAXA,CAFH,CAFF,CAFF,CADF;AAuBD,GAxBD,MAwBO,IAAItB,IAAJ,EAAU;AACf,wBACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,IAAI,EAAEA,IAFR;AAGE,MAAA,QAAQ,EAAEnE,UAHZ;AAIE,MAAA,KAAK,EAAEH,KAAK,CAACqB;AAJf,MADF;AAOD;;AAED,SAAO,IAAP;AACD","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./packages/@react-aria/select/src/useSelect.ts","./packages/@react-aria/select/src/HiddenSelect.tsx"],"sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n\nvar $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaButtonProps} from '@react-types/button';\nimport {AriaListBoxOptions} from '@react-aria/listbox';\nimport {AriaSelectProps} from '@react-types/select';\nimport {chain, filterDOMProps, mergeProps, useId} from '@react-aria/utils';\nimport {FocusEvent, HTMLAttributes, RefObject, useMemo} from 'react';\nimport {KeyboardDelegate} from '@react-types/shared';\nimport {ListKeyboardDelegate, useTypeSelect} from '@react-aria/selection';\nimport {SelectState} from '@react-stately/select';\nimport {setInteractionModality} from '@react-aria/interactions';\nimport {useCollator} from '@react-aria/i18n';\nimport {useField} from '@react-aria/label';\nimport {useMenuTrigger} from '@react-aria/menu';\n\ninterface AriaSelectOptions<T> extends AriaSelectProps<T> {\n  /**\n   * An optional keyboard delegate implementation for type to select,\n   * to override the default.\n   */\n  keyboardDelegate?: KeyboardDelegate\n}\n\ninterface SelectAria {\n  /** Props for the label element. */\n  labelProps: HTMLAttributes<HTMLElement>,\n\n  /** Props for the popup trigger element. */\n  triggerProps: AriaButtonProps,\n\n  /** Props for the element representing the selected value. */\n  valueProps: HTMLAttributes<HTMLElement>,\n\n  /** Props for the popup. */\n  menuProps: AriaListBoxOptions<unknown>,\n\n  /** Props for the select's description element, if any. */\n  descriptionProps: HTMLAttributes<HTMLElement>,\n\n  /** Props for the select's error message element, if any. */\n  errorMessageProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Provides the behavior and accessibility implementation for a select component.\n * A select displays a collapsible list of options and allows a user to select one of them.\n * @param props - Props for the select.\n * @param state - State for the select, as returned by `useListState`.\n */\nexport function useSelect<T>(props: AriaSelectOptions<T>, state: SelectState<T>, ref: RefObject<HTMLElement>): SelectAria {\n  let {\n    keyboardDelegate,\n    isDisabled\n  } = props;\n\n  // By default, a KeyboardDelegate is provided which uses the DOM to query layout information (e.g. for page up/page down).\n  // When virtualized, the layout object will be passed in as a prop and override this.\n  let collator = useCollator({usage: 'search', sensitivity: 'base'});\n  let delegate = useMemo(() => keyboardDelegate || new ListKeyboardDelegate(state.collection, state.disabledKeys, null, collator), [keyboardDelegate, state.collection, state.disabledKeys, collator]);\n\n  let {menuTriggerProps, menuProps} = useMenuTrigger(\n    {\n      isDisabled,\n      type: 'listbox'\n    },\n    state,\n    ref\n  );\n\n  let onKeyDown = (e: KeyboardEvent) => {\n    switch (e.key) {\n      case 'ArrowLeft': {\n        // prevent scrolling containers\n        e.preventDefault();\n\n        let key = state.selectedKey != null ? delegate.getKeyAbove(state.selectedKey) : delegate.getFirstKey();\n        if (key) {\n          state.setSelectedKey(key);\n        }\n        break;\n      }\n      case 'ArrowRight': {\n        // prevent scrolling containers\n        e.preventDefault();\n\n        let key = state.selectedKey != null ? delegate.getKeyBelow(state.selectedKey) : delegate.getFirstKey();\n        if (key) {\n          state.setSelectedKey(key);\n        }\n        break;\n      }\n    }\n  };\n\n  let {typeSelectProps} = useTypeSelect({\n    keyboardDelegate: delegate,\n    selectionManager: state.selectionManager,\n    onTypeSelect(key) {\n      state.setSelectedKey(key);\n    }\n  });\n\n  let {labelProps, fieldProps, descriptionProps, errorMessageProps} = useField({\n    ...props,\n    labelElementType: 'span'\n  });\n\n  typeSelectProps.onKeyDown = typeSelectProps.onKeyDownCapture;\n  delete typeSelectProps.onKeyDownCapture;\n\n  let domProps = filterDOMProps(props, {labelable: true});\n  let triggerProps = mergeProps(typeSelectProps, menuTriggerProps, fieldProps);\n\n  let valueId = useId();\n\n  return {\n    labelProps: {\n      ...labelProps,\n      onClick: () => {\n        if (!props.isDisabled) {\n          ref.current.focus();\n\n          // Show the focus ring so the user knows where focus went\n          setInteractionModality('keyboard');\n        }\n      }\n    },\n    triggerProps: mergeProps(domProps, {\n      ...triggerProps,\n      onKeyDown: chain(triggerProps.onKeyDown, onKeyDown, props.onKeyDown),\n      onKeyUp: props.onKeyUp,\n      'aria-labelledby': [\n        triggerProps['aria-labelledby'],\n        triggerProps['aria-label'] && !triggerProps['aria-labelledby'] ? triggerProps.id : null,\n        valueId\n      ].filter(Boolean).join(' '),\n      onFocus(e: FocusEvent) {\n        if (state.isFocused) {\n          return;\n        }\n\n        if (props.onFocus) {\n          props.onFocus(e);\n        }\n\n        state.setFocused(true);\n      },\n      onBlur(e: FocusEvent) {\n        if (state.isOpen) {\n          return;\n        }\n\n        if (props.onBlur) {\n          props.onBlur(e);\n        }\n\n        state.setFocused(false);\n      }\n    }),\n    valueProps: {\n      id: valueId\n    },\n    menuProps: {\n      ...menuProps,\n      autoFocus: state.focusStrategy || true,\n      shouldSelectOnPressUp: true,\n      shouldFocusOnHover: true,\n      disallowEmptySelection: true,\n      onBlur: (e) => {\n        if (e.currentTarget.contains(e.relatedTarget as Node)) {\n          return;\n        }\n\n        if (props.onBlur) {\n          props.onBlur(e);\n        }\n        state.setFocused(false);\n      },\n      'aria-labelledby': [\n        fieldProps['aria-labelledby'],\n        triggerProps['aria-label'] && !fieldProps['aria-labelledby'] ? triggerProps.id : null\n      ].filter(Boolean).join(' ')\n    },\n    descriptionProps,\n    errorMessageProps\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport React, {ReactNode, RefObject} from 'react';\nimport {SelectState} from '@react-stately/select';\nimport {useInteractionModality} from '@react-aria/interactions';\nimport {useVisuallyHidden} from '@react-aria/visually-hidden';\n\ninterface AriaHiddenSelectProps {\n  /** The text label for the select. */\n  label?: ReactNode,\n\n  /** HTML form input name. */\n  name?: string,\n\n  /** Sets the disabled state of the select and input. */\n  isDisabled?: boolean\n}\n\ninterface HiddenSelectProps<T> extends AriaHiddenSelectProps {\n  /** State for the select. */\n  state: SelectState<T>,\n\n  /** A ref to the trigger element. */\n  triggerRef: RefObject<HTMLElement>\n}\n\n/**\n * Provides the behavior and accessibility implementation for a hidden `<select>` element, which\n * can be used in combination with `useSelect` to support browser form autofill, mobile form\n * navigation, and native HTML form submission.\n */\nexport function useHiddenSelect<T>(props: AriaHiddenSelectProps, state: SelectState<T>, triggerRef: RefObject<HTMLElement>) {\n  let {name, isDisabled} = props;\n  let modality = useInteractionModality();\n  let {visuallyHiddenProps} = useVisuallyHidden();\n\n  // In Safari, the <select> cannot have `display: none` or `hidden` for autofill to work.\n  // In Firefox, there must be a <label> to identify the <select> whereas other browsers\n  // seem to identify it just by surrounding text.\n  // The solution is to use <VisuallyHidden> to hide the elements, which clips the elements to a\n  // 1px rectangle. In addition, we hide from screen readers with aria-hidden, and make the <select>\n  // non tabbable with tabIndex={-1}.\n  //\n  // In mobile browsers, there are next/previous buttons above the software keyboard for navigating\n  // between fields in a form. These only support native form inputs that are tabbable. In order to\n  // support those, an additional hidden input is used to marshall focus to the button. It is tabbable\n  // except when the button is focused, so that shift tab works properly to go to the actual previous\n  // input in the form. Using the <select> for this also works, but Safari on iOS briefly flashes\n  // the native menu on focus, so this isn't ideal. A font-size of 16px or greater is required to\n  // prevent Safari from zooming in on the input when it is focused.\n  //\n  // If the current interaction modality is null, then the user hasn't interacted with the page yet.\n  // In this case, we set the tabIndex to -1 on the input element so that automated accessibility\n  // checkers don't throw false-positives about focusable elements inside an aria-hidden parent.\n  return {\n    containerProps: {\n      ...visuallyHiddenProps,\n      'aria-hidden': true\n    },\n    inputProps: {\n      type: 'text',\n      tabIndex: modality == null || state.isFocused || state.isOpen ? -1 : 0,\n      style: {fontSize: 16},\n      onFocus: () => triggerRef.current.focus(),\n      disabled: isDisabled\n    },\n    selectProps: {\n      tabIndex: -1,\n      disabled: isDisabled,\n      name,\n      size: state.collection.size,\n      value: state.selectedKey ?? '',\n      onChange: (e: React.ChangeEvent<HTMLSelectElement>) => state.setSelectedKey(e.target.value)\n    }\n  };\n}\n\n/**\n * Renders a hidden native `<select>` element, which can be used to support browser\n * form autofill, mobile form navigation, and native form submission.\n */\nexport function HiddenSelect<T>(props: HiddenSelectProps<T>) {\n  let {state, triggerRef, label, name, isDisabled} = props;\n  let {containerProps, inputProps, selectProps} = useHiddenSelect(props, state, triggerRef);\n\n  // If used in a <form>, use a hidden input so the value can be submitted to a server.\n  // If the collection isn't too big, use a hidden <select> element for this so that browser\n  // autofill will work. Otherwise, use an <input type=\"hidden\">.\n  if (state.collection.size <= 300) {\n    return (\n      <div {...containerProps}>\n        <input {...inputProps} />\n        <label>\n          {label}\n          <select {...selectProps}>\n            <option />\n            {[...state.collection.getKeys()].map(key => {\n              let item = state.collection.getItem(key);\n              if (item.type === 'item') {\n                return (\n                  <option\n                    key={item.key}\n                    value={item.key}>\n                    {item.textValue}\n                  </option>\n                );\n              }\n            })}\n          </select>\n        </label>\n      </div>\n    );\n  } else if (name) {\n    return (\n      <input\n        type=\"hidden\"\n        name={name}\n        disabled={isDisabled}\n        value={state.selectedKey} />\n    );\n  }\n\n  return null;\n}\n"],"names":["$parcel$interopDefault","a","__esModule","default","useSelect","props","state","ref","keyboardDelegate","isDisabled","collator","useCollator","usage","sensitivity","delegate","useMemo","ListKeyboardDelegate","collection","disabledKeys","menuTriggerProps","menuProps","useMenuTrigger","type","onKeyDown","e","key","preventDefault","selectedKey","getKeyAbove","getFirstKey","setSelectedKey","getKeyBelow","typeSelectProps","useTypeSelect","selectionManager","onTypeSelect","labelProps","fieldProps","descriptionProps","errorMessageProps","useField","labelElementType","onKeyDownCapture","domProps","filterDOMProps","labelable","triggerProps","mergeProps","valueId","useId","onClick","current","focus","setInteractionModality","chain","onKeyUp","id","filter","Boolean","join","onFocus","isFocused","setFocused","onBlur","isOpen","valueProps","autoFocus","focusStrategy","shouldSelectOnPressUp","shouldFocusOnHover","disallowEmptySelection","currentTarget","contains","relatedTarget","useHiddenSelect","triggerRef","name","modality","useInteractionModality","visuallyHiddenProps","useVisuallyHidden","containerProps","inputProps","tabIndex","style","fontSize","disabled","selectProps","size","value","onChange","target","HiddenSelect","label","getKeys","map","item","getItem","textValue"],"version":3,"file":"main.js.map"}